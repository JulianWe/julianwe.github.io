---

- name: verify installation
  shell: | 
    cd ~
    ls 
  register: kubespray

- name: verify ssh
  shell: | 
    cat $HOME/.ssh/id_rsa
  register: id_rsa

- name: debug
  debug:
    msg: "{{ id_rsa }}"

# - name: install kubespray
#   state: present
#   shell: | 
#     cd ~
#     git clone -b v2.26.0 --depth=1 https://github.com/kubernetes-sigs/kubespray.git
#     cd kubespray
#     apt-get update ; apt-get install -y python3-pip virtualenv -y
#     cd ~/kubespray
#     virtualenv --python=python3 venv
#     source venv/bin/activate 
#     pip3 install -r requirements.txt
#   register: kubespray 


# - name: generate ssh key
#   shell: | 
#     ssh-keygen -t rsa -C $(hostname) -f "$HOME/.ssh/ls_id_rsa" -P "" ; cat ~/.ssh/ls_id_rsa.pub 
#   register: ssh_key

- name: install kubernetes & docker
  shell: | 
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
    sudo apt-get update && sudo apt-get upgrade -y
    sudo apt-get install docker.io -y
    sudo apt-get install kubelet kubeadm kubectl -y    
  register: kubectl

- name: systemctl start kubelet & kubectl
  shell: | 
    systemctl start containerd
    systemctl enable containerd
    systemctl start kubelet
    systemctl enable kubelet
    kubectl get pods -A -o wide  
  register: systemctl

...
