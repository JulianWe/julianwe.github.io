---
- name: install packages
  shell: | 
    apt-get update && apt-get upgrade -y
    apt-get install ansible -y 
    apt-get install docker.io -y
    apt-get install apt-transport-https ca-certificates curl -y
    apt-get install python3-pip virtualenv -y
  register: packages 

- name: ensure directory
  stat:
    path: /home/jw/kubespray
  register: exists

- name: ensure ssh keys
  stat:
    path: ~/.ssh/id_rsa.pub 
  register: id_rsa_exists

- name: clone kubespray repository
  shell:  | 
    git clone -b v2.26.0 --depth=1 https://github.com/kubernetes-sigs/kubespray.git
  when: true !=  exists.stat.exists

- name: generate ssh key
  shell: | 
    ssh-keygen -t rsa -C $(hostname) -f "$HOME/.ssh/id_rsa" -P "" ; cat ~/.ssh/id_rsa.pub 
  register: ssh_key
  when: true != id_rsa_exists.stat.exists

- name: copy hosts.yml file to remote host
  ansible.builtin.copy:
    src: ../vars/k8s_hosts.yml 
    dest: /home/jw/kubespray/inventory/k8s_hosts.yml 

- name: copy group_vars.yml file to remote host
  ansible.builtin.copy:
    src: ../vars/group_vars.yml
    dest: /home/jw/kubespray/inventory/group_vars.yml

- name: copy cluster_config.yml file to remote host
  ansible.builtin.copy:
    src: ../vars/cluster_config.yml
    dest: /home/jw/kubespray/inventory/cluster_config.yml

- name: run ansible playbook
  shell: | 
    cd /home/jw/kubespray
    sudo -s
    python3 -m venv k8s-venv
    source k8s-venv/bin/activate
    pip install -r requirements.txt
    ansible-playbook -i inventory/k8s_hosts.yml -b -v -e @inventory/cluster_config.yml --user=ubuntu --become-user=root --private-key=~/.ssh/id_rsa --become cluster.yml
  register: playbook_run
  delegate_to: "{{ ansible_host }}"

- meta: end_play

- name: clone provider playbooks
  shell: | 
    git clone https://github.com/akash-network/provider-playbooks.git
    cd provider-playbooks
    ./scripts/setup_provider.sh
  register: setup_provider

- name: systemctl start kubelet & kubectl
  shell: |  
    systemctl start containerd
    systemctl enable containerd
    systemctl start kubelet
    systemctl enable kubelet
    kubectl get pods -A -o wide  
  register: systemctl
...
